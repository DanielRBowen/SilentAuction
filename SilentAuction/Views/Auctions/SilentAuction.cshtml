@using SilentAuction.ViewModels;
@using SilentAuction.Controllers;
@model AuctionViewModel
@{
    ViewData["Title"] = "Silent Auction";
}

<h2>@ViewData["Title"]</h2>

<div class="container">

    <div class="hero-unit text-center panel panel-heading">
        <h1>@Model.AuctionName</h1>
        <h2>End Date: @Model.AuctionEndDate</h2>
        <div id="time"></div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <div class="panel panel-default">
                <div class="panel-body">
                    <form asp-controller="Auctions" asp-action="SilentAuction" method="get">
                        <div>
                            <label for="searchQuery">Find by Name or Description: </label>
                            <input class="form-control" type="text" id="searchQuery" name="searchQuery" value="@Model.SearchQuery" />
                            <input type="submit" value="Search" class="btn btn-default btn-block" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="col-md-2">Items Per Page</label>
                    <a href="@Url.Action(nameof(AuctionsController.SilentAuction), "Auctions", new { searchQuery = Model.SearchQuery, pageSize = 5 })" class="btn btn-default">5</a>
                    <a href="@Url.Action(nameof(AuctionsController.SilentAuction), "Auctions", new { searchQuery = Model.SearchQuery, pageSize = 10 })" class="btn btn-default">10</a>
                    @*<select class="col-md-4">
                        <option></option>
                        <option><a href="@Url.Action(nameof(AuctionsController.SilentAuction), "Auctions", new { searchQuery = Model.SearchQuery, pageSize = 5 })">5</a></option>
                        <option><a href="@Url.Action(nameof(AuctionsController.SilentAuction), "Auctions", new { searchQuery = Model.SearchQuery, pageSize = 10 })">10</a></option>
                    </select>*@
                </div>
            </div>

            @*<div class="col-md-2">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <form asp-controller="Auctions" asp-action="SilentAuction" method="get">
                                <div>
                                    <label for="itemsPerPage">Items Per Page</label>
                                    @Html.DropDownList("ItemsPerPage", (IEnumerable<SelectListItem>)ViewBag.Locations, new { id = "ddlLocations", @class = "form-control" })
                                    <input type="submit" value="Submit" class="btn btn-default btn-block" />
                                </div>
                            </form>
                        </div>
                        </div>
                </div>
            </div>*@
        </div>
    </div>

    <div class="row">
            <div class="form-group">
                <ul class="nav nav-pills">
                    <li class="@(Model.CategoryID == null ? "active" : null)"><a href="@Url.Action(nameof(AuctionsController.SilentAuction), "Auctions")">All Listings</a></li>
                    @foreach (var category in Model.Categories)
                    {
                        <li class="@(category.Id == Model.CategoryID ? "active" : null)">
                            <a href="@Url.Action(nameof(AuctionsController.SilentAuction), "Auctions", new { categoryId = category.Id, searchQuery = Model.SearchQuery })">@category.Name</a>
                        </li>
                    }
                </ul>
            </div>
    </div>



    @foreach (var listing in Model.Listings)
            {
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="media">
                    <div class="media-left">
                        <!--Use JQuery and bootstrap carousel???? for the div of this to get a click and look at images-->
                        <div>
                            @{
                                var image = listing.Item.ItemMedia.FirstOrDefault();
                            }
                            @if (image != null)
                            {
                                <img class="media-object" src="@Url.Action(nameof(MediaController.Thumbnail), "Media", values: new { id = image.MediaId})" />
                            }
                            else
                            {
                                <img class="media-object" src="~/images/no-image.jpg" />
                            }
                        </div>
                    </div>
                    <div class="media-body">
                        <ul>
                            <li>Minimum Bid: @Html.DisplayFor(modelItem => listing.MinimumBid)</li>
                            <li>Retail Value: @Html.DisplayFor(modelItem => listing.Item.RetailPrice)</li>
                            <li>@Html.DisplayFor(modelItem => listing.Item.Name)</li>
                            <li>@Html.DisplayFor(modelItem => listing.Item.Description)</li>
                            <li>Bidding Increment: @Html.DisplayFor(modelItem => listing.Increment)</li>                      
                        </ul>
                    </div>
                </div>
            </div>
        </div>
                                }

        @{
        var prevDisabled = !Model.Listings.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Listings.HasNextPage ? "disabled" : "";
            }
    
        <a asp-controller="Auctions"
             asp-action="SilentAuction"
             asp-route-id="@Model.Id"
             asp-route-pageIndex="@(Model.Listings.PageIndex - 1)"
             asp-route-searchQuery="@Model.SearchQuery"
             class="btn btn-default @prevDisabled">
                Previous
        
    </a>
        <a asp-controller="Auctions"
             asp-action="SilentAuction"
             asp-route-id="@Model.Id"
             asp-route-pageIndex="@(Model.Listings.PageIndex + 1)"
             asp-route-searchQuery="@Model.SearchQuery"
             class="btn btn-default @nextDisabled">
                Next
    </a>
</div>


<div>
    <hr />
    <a asp-controller="Home" asp-action="Index">Back to Admin Home</a>
</div>

@section Scripts {
    <script type="text/javascript">
        @{
        string endDatestring = Model.AuctionEndDate;
        int indexOfSecondWordStart = endDatestring.IndexOf(" ") + 1;
        endDatestring = endDatestring.Substring(indexOfSecondWordStart);
        @Html.Raw("var endDateString = '")
        @Html.Raw(endDatestring)
        @Html.Raw("';")
    }
        var timerToEnd = setInterval(myTimer, 1000);
        var endDate = new Date(Date.parse(endDateString));

        function myTimer() {
            var currentDate = new Date();
            var oneDay = 1000 * 60 * 60 * 24;
            var oneHour = 1000 * 60 * 60;
            var oneMinuet = 1000 * 60;
            var differenceInMilliseconds = endDate.getTime() - currentDate.getTime();


            var days = Math.round(differenceInMilliseconds / oneDay);
            var hours = Math.round((differenceInMilliseconds % oneDay) / oneHour);
            var minutes = Math.round(((differenceInMilliseconds % oneDay) % oneHour) / oneMinuet);
            var seconds = Math.round((((differenceInMilliseconds % oneDay) % oneHour) % oneMinuet) / 1000);

           // var days = Math.round(differenceInMilliseconds / oneDay);
            //var hours = Math.round(differenceInMilliseconds / (oneDay / 24));
            //var minutes = Math.round(differenceInMilliseconds / (oneDay / 24 / 60));
           // var seconds = Math.round(differenceInMilliseconds / (oneDay / 24 / 60 / 60));

            document.getElementById("time").innerHTML = "<h3><strong>Time Till Auction End:</strong> " + days + ":" + hours + ":" + minutes + ":" + seconds + "</h3>";
        }
    </script>
}